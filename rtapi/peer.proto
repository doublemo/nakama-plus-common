syntax = "proto3";

package nakama.peer;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "realtime.proto";

option go_package = "github.com/heroiclabs/nakama-common/rtapi";

option java_multiple_files = true;
option java_outer_classname = "NakamaPeer";
option java_package = "com.heroiclabs.nakama.rtapi";

option csharp_namespace = "Nakama.Protobuf";


message NakamaPeer {
    message Frame {
        string id = 1;
        string inboxAddress = 2;
        string node = 3;
        google.protobuf.Timestamp timestamp = 4;
        google.protobuf.BoolValue gossip  =  5;
        map<string, bool> infected = 6;
        oneof payload {
            Envelope envelope = 7;
            Envelope kickedOut = 8;
            Status status = 9;
            Presence track = 10;
            Untrack untrack = 11;
            Envelope broadcast = 12;
        }
    }

    message State {
        string node = 1;
        repeated Frame frames = 2;
        repeated Presence Presences = 3;
    }

    message Envelope {
        repeated string recipient = 1;
        uint32 reason = 2;
        map<string, string> context = 3;
        oneof payload {
            realtime.Envelope nakamaEnvelope = 4;
            bytes bytes = 5;
        }
    }

    message Untrack {
        string sessionID = 1;
        string userID = 2;
        repeated PresenceStream  stream = 3;
        repeated uint32 modes = 4;
        uint32 reason = 5;  
    }

    message Status {
        string name = 1;
        int32  health = 2;
        int32 sessionCount = 3;
        int32 presenceCount = 4;
        int32 matchCount = 5;
        int32 goroutineCount = 6;
        double avgLatencyMs = 7;
        double avgRateSec = 8;
        double avgInputKbs = 9;
        double avgOutputKbs = 10;
    }

    message Presence {
        string sessionID = 1;
        string userID = 2;
        repeated PresenceStream  stream = 3;
        repeated PresenceMeta meta = 4;
        bool allowIfFirstForSession = 5;
    }

    message PresenceStream {
        uint32 mode        = 1;
        string subject     = 2;
        string subcontext  = 3;
        string label       = 4;
    }

    message PresenceMeta {
        uint32 sessionFormat = 1;
        bool   hidden = 2;
        bool   persistence  = 3;
        string username = 4;    
        string status = 5;      
        uint32 reason = 6;      
    }

    message NodeMeta {
        string name = 1;
        map<string, string> vars = 2;
    }
}